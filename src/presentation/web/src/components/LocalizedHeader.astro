---
import Container from './ui/Container.astro';
import Button from './ui/Button.astro';
import LanguageSwitcher from './LanguageSwitcher.astro';
import { createTranslationFunction, addLanguageToURL, type SupportedLanguage } from '../utils/i18n';

interface Props {
  currentLang: SupportedLanguage;
  translations: any;
}

const { currentLang, translations } = Astro.props;
const t = createTranslationFunction(translations);

// Create localized navigation URLs
const currentPath = Astro.url.pathname;
const basePath = currentLang === 'en' ? '' : `/${currentLang}`;
---

<header class="sticky top-0 z-50 bg-white/90 dark:bg-black/90 backdrop-blur-sm border-b border-gray-200 dark:border-gray-800 transition-colors duration-200">
  <Container>
    <nav class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={basePath || '/'} class="flex items-center space-x-2 hover:opacity-80 transition-opacity">
          <div class="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
            <span class="text-black font-bold text-sm">W</span>
          </div>
          <span class="font-semibold text-lg text-gray-900 dark:text-white">WHPH</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-6">
        <a href="#features" class="text-gray-600 dark:text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.features')}
        </a>
        <a href="#download" class="text-gray-600 dark:text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.download')}
        </a>
        <a href="#faq" class="text-gray-600 dark:text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.faq')}
        </a>
        <a href="https://github.com/ahmet-cetinkaya/whph" target="_blank" rel="noopener" 
           class="text-gray-600 dark:text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.github')}
        </a>
        
        <!-- Language Switcher -->
        <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} />
      </div>

      <!-- Desktop CTA -->
      <div class="hidden md:flex items-center">
        <Button href="#download" size="sm">
          {t('navigation.download')}
        </Button>
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
        aria-label={t('navigation.toggleMenu')}
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </nav>
  </Container>

  <!-- Mobile Menu Overlay -->
  <div 
    id="mobile-menu" 
    class="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm opacity-0 invisible transition-all duration-300 md:hidden"
  >
    <div class="fixed right-0 top-0 h-full w-80 max-w-[80vw] bg-white dark:bg-gray-900 shadow-xl transform translate-x-full transition-transform duration-300">
      <!-- Mobile Menu Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
        <div class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
            <span class="text-black font-bold text-sm">W</span>
          </div>
          <span class="font-semibold text-lg text-gray-900 dark:text-white">WHPH</span>
        </div>
        <button 
          id="mobile-menu-close" 
          class="p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
          aria-label={t('common.close')}
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Mobile Menu Content -->
      <div class="p-6 space-y-6">
        <nav class="space-y-4">
          <a href="#features" class="block text-lg font-medium text-gray-900 dark:text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.features')}
          </a>
          <a href="#download" class="block text-lg font-medium text-gray-900 dark:text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.download')}
          </a>
          <a href="#faq" class="block text-lg font-medium text-gray-900 dark:text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.faq')}
          </a>
          <a href="https://github.com/ahmet-cetinkaya/whph" target="_blank" rel="noopener" 
             class="block text-lg font-medium text-gray-900 dark:text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.github')}
          </a>
        </nav>

        <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
          <Button href="#download" variant="primary" size="lg" class="w-full justify-center">
            {t('navigation.download')}
          </Button>
        </div>

        <!-- Theme Toggle (Optional) -->
        <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
          <button 
            id="theme-toggle-mobile" 
            class="flex items-center space-x-3 w-full p-3 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
            </svg>
            <span>{t('navigation.toggleTheme')}</span>
          </button>
        </div>

        <!-- Mobile Language Switcher -->
        <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} isMobile={true} />
      </div>
    </div>
  </div>
</header>

<script>
  function initMobileMenu() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeButton = document.getElementById('mobile-menu-close');
    const menuPanel = mobileMenu?.querySelector('div');
    const menuLinks = document.querySelectorAll('.mobile-menu-link');

    function closeMobileMenu() {
      if (mobileMenu && menuPanel) {
        mobileMenu.classList.add('opacity-0', 'invisible');
        menuPanel.classList.add('translate-x-full');
        document.body.style.overflow = '';
      }
    }

    menuButton?.addEventListener('click', function() {
      if (mobileMenu && menuPanel) {
        mobileMenu.classList.remove('opacity-0', 'invisible');
        menuPanel.classList.remove('translate-x-full');
        document.body.style.overflow = 'hidden';
      }
    });

    closeButton?.addEventListener('click', closeMobileMenu);

    mobileMenu?.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        closeMobileMenu();
      }
    });

    menuLinks.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }
</script>