---
import LocalizedLayout from '../../layouts/LocalizedLayout.astro';
import Container from '../../components/ui/Container.astro';
import Section from '../../components/ui/Section.astro';
import Button from '../../components/ui/Button.astro';
import MarkdownRenderer from '../../components/MarkdownRenderer.astro';
import { 
  getLanguageFromURL, 
  loadTranslations, 
  createTranslationFunction,
  supportedLanguages,
  getCurrentYear
} from '../../utils/i18n';

// Get static paths for all supported languages
export async function getStaticPaths() {
  return supportedLanguages.map(lang => ({
    params: { lang }
  }));
}

const { lang } = Astro.params;
const currentLang = lang || 'en';

// Load translations
const translations = await loadTranslations(currentLang);
const t = createTranslationFunction(translations);
const currentYear = getCurrentYear();
---

<LocalizedLayout>
  <!-- Hero Section -->
  <Section class="py-20 bg-gradient-to-br from-white to-gray-50 dark:from-black dark:to-gray-900">
    <Container>
      <div class="grid lg:grid-cols-2 gap-12 items-center">
        <div class="space-y-6">
          <h1 class="text-hero text-balance text-gray-900 dark:text-white">
            {t('hero.title')} <span class="text-primary">{t('hero.titleHighlight')}</span>
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-300 leading-relaxed">
            {t('hero.subtitle')}
          </p>
          <div class="flex flex-col sm:flex-row gap-4">
            <Button href="#download" variant="primary" size="lg">
              {t('hero.downloadFree')}
            </Button>
            <Button 
              href="https://github.com/ahmet-cetinkaya/whph" 
              variant="secondary" 
              size="lg"
              target="_blank" 
              rel="noopener"
            >
              {t('hero.viewGithub')}
            </Button>
          </div>
          <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-300">
            <span>{t('hero.availableOn')}</span>
            <div class="flex items-center gap-2">
              <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-whph text-xs font-medium text-gray-700 dark:text-gray-300">
                {t('hero.platforms.android')}
              </span>
              <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-whph text-xs font-medium text-gray-700 dark:text-gray-300">
                {t('hero.platforms.windows')}
              </span>
              <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-whph text-xs font-medium text-gray-700 dark:text-gray-300">
                {t('hero.platforms.linux')}
              </span>
            </div>
          </div>
        </div>
        <div class="relative">
          <div class="bg-white dark:bg-gray-800 rounded-whph shadow-sm p-8 text-center">
            <div class="w-64 h-96 mx-auto bg-gray-100 dark:bg-gray-700 rounded-whph flex items-center justify-center text-gray-600 dark:text-gray-300">
              [{t('hero.screenshotAlt')}]
            </div>
          </div>
        </div>
      </div>
    </Container>
  </Section>

  <!-- Features Section -->
  <Section class="py-20 bg-white dark:bg-black" id="features">
    <Container>
      <div class="text-center mb-12">
        <h2 class="text-section-title mb-4">{t('features.title')}</h2>
        <p class="text-xl text-text-secondary dark:text-dark-secondary max-w-2xl mx-auto">
          {t('features.subtitle')}
        </p>
      </div>
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
        <!-- Task Management -->
        <div class="bg-white dark:bg-gray-800 rounded-whph shadow-sm p-6 text-center space-y-4">
          <div class="w-12 h-12 bg-primary/20 rounded-whph mx-auto flex items-center justify-center">
            <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path>
            </svg>
          </div>
          <h3 class="text-card-title">{t('features.taskManagement.title')}</h3>
          <p class="text-text-secondary dark:text-dark-secondary">
            {t('features.taskManagement.description')}
          </p>
        </div>

        <!-- Habit Tracking -->
        <div class="bg-white dark:bg-gray-800 rounded-whph shadow-sm p-6 text-center space-y-4">
          <div class="w-12 h-12 bg-primary/20 rounded-whph mx-auto flex items-center justify-center">
            <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
          </div>
          <h3 class="text-card-title">{t('features.habitTracking.title')}</h3>
          <p class="text-text-secondary dark:text-dark-secondary">
            {t('features.habitTracking.description')}
          </p>
        </div>

        <!-- Time Analytics -->
        <div class="bg-white dark:bg-gray-800 rounded-whph shadow-sm p-6 text-center space-y-4">
          <div class="w-12 h-12 bg-primary/20 rounded-whph mx-auto flex items-center justify-center">
            <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
          <h3 class="text-card-title">{t('features.timeAnalytics.title')}</h3>
          <p class="text-text-secondary dark:text-dark-secondary">
            {t('features.timeAnalytics.description')}
          </p>
        </div>

        <!-- Cross-Platform -->
        <div class="bg-white dark:bg-gray-800 rounded-whph shadow-sm p-6 text-center space-y-4">
          <div class="w-12 h-12 bg-primary/20 rounded-whph mx-auto flex items-center justify-center">
            <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
            </svg>
          </div>
          <h3 class="text-card-title">{t('features.crossPlatform.title')}</h3>
          <p class="text-text-secondary dark:text-dark-secondary">
            {t('features.crossPlatform.description')}
          </p>
        </div>
      </div>
    </Container>
  </Section>

  <!-- Social Proof Section -->
  <Section class="py-20 bg-gray-50 dark:bg-gray-900">
    <Container>
      <div class="text-center mb-12">
        <h2 class="text-section-title mb-4">{t('socialProof.title')}</h2>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
          {t('socialProof.subtitle')}
        </p>
      </div>
      
      <!-- GitHub Link Section -->
      <div class="mt-12 text-center">
        <a 
          href="https://github.com/ahmet-cetinkaya/whph" 
          target="_blank" 
          rel="noopener"
          class="inline-flex items-center px-6 py-3 bg-gray-50 dark:bg-gray-800 rounded-whph-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
        >
          <svg class="w-5 h-5 mr-3 text-gray-700 dark:text-gray-300" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"></path>
          </svg>
          <div class="text-left">
            <div class="text-sm font-medium text-gray-900 dark:text-white">
              {t('socialProof.community.title')}
            </div>
            <div class="text-xs text-gray-600 dark:text-gray-400">
              {t('socialProof.community.subtitle')}
            </div>
          </div>
        </a>
      </div>
    </Container>
  </Section>

  <!-- Download Section -->
  <Section class="py-20 bg-white dark:bg-black" id="download">
    <Container>
      <div class="text-center">
        <h2 class="text-section-title mb-4">{t('download.title')}</h2>
        <p class="text-xl text-text-secondary dark:text-dark-secondary mb-8 max-w-2xl mx-auto">
          {t('download.subtitle')}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center mb-8">
          <Button href="#" variant="primary" size="lg">
            {t('download.downloadFor', { platform: t('hero.platforms.android') })}
          </Button>
          <Button href="#" variant="secondary" size="lg">
            {t('download.downloadFor', { platform: t('hero.platforms.windows') })}
          </Button>
          <Button href="#" variant="secondary" size="lg">
            {t('download.downloadFor', { platform: t('hero.platforms.linux') })}
          </Button>
        </div>
        <div class="text-sm text-text-secondary dark:text-dark-secondary">
          <p set:html={t('download.alsoAvailable', { 
            fdroid: `<a href="#" class="text-primary hover:underline transition-colors">${t('download.fdroid')}</a>`,
            github: `<a href="https://github.com/ahmet-cetinkaya/whph/releases" class="text-primary hover:underline transition-colors">${t('download.githubReleases')}</a>`
          })}></p>
        </div>
      </div>
    </Container>
  </Section>

  <!-- FAQ Section -->
  <Section class="py-20 bg-white dark:bg-black" id="faq">
    <Container>
      <div class="text-center mb-12">
        <h2 class="text-section-title mb-4">{t('faq.title')}</h2>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
          {t('faq.subtitle')}
        </p>
      </div>
      <div class="max-w-3xl mx-auto">
        <div class="space-y-4">
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.free.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.free.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.platforms.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.platforms.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.privacy.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.privacy.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.contribute.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.contribute.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.sync.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.sync.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.offline.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.offline.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.backup.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.backup.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
          
          <details class="bg-white dark:bg-gray-800 rounded-whph shadow-sm border border-gray-200 dark:border-gray-700">
            <summary class="cursor-pointer p-6 font-semibold text-gray-900 dark:text-white hover:text-primary transition-colors">
              {t('faq.questions.workHardPlayHard.question')}
            </summary>
            <div class="px-6 pb-6">
              <MarkdownRenderer 
                content={t('faq.questions.workHardPlayHard.answer')} 
                class="text-gray-700 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none prose-a:text-primary prose-a:hover:underline prose-strong:text-gray-900 dark:prose-strong:text-white"
              />
            </div>
          </details>
        </div>
      </div>
    </Container>
  </Section>

  <!-- About Section -->
  <Section class="py-section bg-white dark:bg-black">
    <Container class="max-w-4xl">
      <div class="text-center space-y-6">
        <h2 class="text-section-title">{t('about.title')}</h2>
        <p class="text-body-lg text-text-secondary dark:text-dark-secondary">
          {t('about.description')}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <Button 
            href="https://github.com/ahmet-cetinkaya/whph" 
            variant="secondary" 
            target="_blank" 
            rel="noopener"
          >
            {t('about.viewSource')}
          </Button>
          <Button 
            href="https://github.com/ahmet-cetinkaya/whph/discussions" 
            variant="ghost" 
            target="_blank" 
            rel="noopener"
          >
            {t('about.joinCommunity')}
          </Button>
        </div>
      </div>
    </Container>
  </Section>

  <!-- Footer -->
  <footer class="border-t border-divider dark:border-dark-divider py-8">
    <Container>
      <div class="flex flex-col md:flex-row justify-between items-center gap-4">
        <div class="flex items-center gap-6">
          <span class="font-semibold text-primary text-lg">WHPH</span>
          <div class="flex items-center gap-4 text-sm">
            <a href="https://github.com/ahmet-cetinkaya/whph" class="text-text-secondary dark:text-dark-secondary hover:text-primary transition-colors">
              {t('footer.links.github')}
            </a>
            <a href="https://github.com/ahmet-cetinkaya/whph/discussions" class="text-text-secondary dark:text-dark-secondary hover:text-primary transition-colors">
              {t('footer.links.community')}
            </a>
            <a href="https://github.com/ahmet-cetinkaya/whph/blob/main/LICENSE" class="text-text-secondary dark:text-dark-secondary hover:text-primary transition-colors">
              {t('footer.links.license')}
            </a>
          </div>
        </div>
        <p class="text-sm text-text-secondary dark:text-dark-secondary">
          {t('footer.copyright', { year: currentYear })}
        </p>
      </div>
    </Container>
  </footer>
</LocalizedLayout>