---
import Container from './ui/Container.astro';
import Button from './ui/Button.astro';
import LanguageSwitcher from './LanguageSwitcher.astro';
import HamburgerIcon from './icons/HamburgerIcon.astro';
import CloseIcon from './icons/CloseIcon.astro';
import { createTranslationFunction, addLanguageToURL, type SupportedLanguage } from '../utils/i18n';

interface Props {
  currentLang: SupportedLanguage;
  translations: any;
}

const { currentLang, translations } = Astro.props;
const t = createTranslationFunction(translations);

// Create localized navigation URLs
const currentPath = Astro.url.pathname;
const basePath = currentLang === 'en' ? '' : `/${currentLang}`;
---

<header class="sticky top-0 z-50 bg-black/90 border-b border-gray-800">
  <Container>
    <nav class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={basePath || '/'} class="flex items-center space-x-2 hover:opacity-80 transition-opacity">
          <div class="w-12 flex items-center justify-center p-1">
            <img src="/favicon.svg" alt="WHPH Logo" class="w-full h-full" />
          </div>
          <span class="font-semibold text-lg text-white">WHPH</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-6">
        <a href="#features" class="text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.features')}
        </a>
        <a href="#download" class="text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.download')}
        </a>
        <a href="#faq" class="text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.faq')}
        </a>
        <a href="https://github.com/ahmet-cetinkaya/whph" target="_blank" rel="noopener" 
           class="text-gray-300 hover:text-primary transition-colors font-medium">
          {t('navigation.github')}
        </a>
      </div>

      <!-- Desktop Actions -->
      <div class="hidden md:flex items-center space-x-3">
        <!-- Language Switcher -->
        <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} />
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden p-2 rounded-lg text-gray-300 hover:bg-gray-800 transition-colors"
        aria-label={t('navigation.toggleMenu')}
      >
        <HamburgerIcon />
      </button>
    </nav>
  </Container>

  <!-- Mobile Menu Blur Overlay -->
  <div 
    id="mobile-menu-overlay" 
    class="fixed inset-0 z-40 backdrop-blur-md opacity-0 invisible transition-all duration-300 md:hidden"
  ></div>

  <!-- Mobile Menu Drawer -->
  <div 
    id="mobile-menu" 
    class="fixed right-0 top-0 h-screen w-80 max-w-[80vw] z-50 bg-gray-900/95 shadow-xl border-l border-gray-700 transform translate-x-full transition-transform duration-300 flex flex-col md:hidden"
  >
      <!-- Mobile Menu Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-700 bg-gray-800/90 flex-shrink-0">
        <div class="flex items-center space-x-2">
          <div class="w-8 h-8 flex items-center justify-center p-1">
            <img src="/favicon.svg" alt="WHPH Logo" class="w-full h-full" />
          </div>
          <span class="font-semibold text-lg text-white">WHPH</span>
        </div>
        <button 
          id="mobile-menu-close" 
          class="p-2 rounded-lg text-gray-300 hover:bg-gray-800 transition-colors"
          aria-label={t('common.close')}
        >
          <CloseIcon />
        </button>
      </div>

      <!-- Mobile Menu Content -->
      <div class="flex-1 p-6 space-y-6 bg-gray-900/90 overflow-y-auto min-h-0">
        <!-- Navigation Links (matching desktop exactly) -->
        <nav class="space-y-4">
          <a href="#features" class="block text-lg font-medium text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.features')}
          </a>
          <a href="#download" class="block text-lg font-medium text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.download')}
          </a>
          <a href="#faq" class="block text-lg font-medium text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.faq')}
          </a>
          <a href="https://github.com/ahmet-cetinkaya/whph" target="_blank" rel="noopener" 
             class="block text-lg font-medium text-white hover:text-primary transition-colors mobile-menu-link">
            {t('navigation.github')}
          </a>
        </nav>

        <!-- Language Switcher (matching desktop functionality) -->
        <div>
          <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} isMobile={true} />
        </div>
      </div>
  </div>
</header>

<script>
  function initMobileMenu() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const closeButton = document.getElementById('mobile-menu-close');
    const menuLinks = document.querySelectorAll('.mobile-menu-link');

    function closeMobileMenu() {
      if (mobileMenu && mobileMenuOverlay) {
        // Hide overlay
        mobileMenuOverlay.classList.add('opacity-0', 'invisible');
        // Slide drawer out
        mobileMenu.classList.add('translate-x-full');
        // Restore body scroll
        document.body.style.overflow = '';
      }
    }

    function openMobileMenu() {
      if (mobileMenu && mobileMenuOverlay) {
        // Show overlay
        mobileMenuOverlay.classList.remove('opacity-0', 'invisible');
        // Slide drawer in
        mobileMenu.classList.remove('translate-x-full');
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      }
    }

    menuButton?.addEventListener('click', openMobileMenu);
    closeButton?.addEventListener('click', closeMobileMenu);

    // Close when clicking on overlay
    mobileMenuOverlay?.addEventListener('click', closeMobileMenu);

    // Close when clicking menu links
    menuLinks.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });

    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initMobileMenu();
    });
  } else {
    initMobileMenu();
  }
</script>