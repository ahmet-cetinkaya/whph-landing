---
import Container from './ui/Container.astro';
import LanguageSwitcher from './LanguageSwitcher.astro';
import HamburgerIcon from './icons/HamburgerIcon.astro';
import CloseIcon from './icons/CloseIcon.astro';
import { createTranslationFunction, type SupportedLanguage } from '../utils/i18n';

interface Props {
  currentLang: SupportedLanguage;
  translations: any;
}

const { currentLang, translations } = Astro.props;
const t = createTranslationFunction(translations);

// Create localized navigation URLs
const currentPath = Astro.url.pathname;
const basePath = currentLang === 'en' ? '' : `/${currentLang}`;
---

<header class="sticky top-0 z-50 border-b border-gray-800 bg-dark-surface-0/90">
  <Container>
    <nav class="flex h-16 items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center">
        <a
          href={basePath || '/'}
          class="flex items-center space-x-2 transition-opacity hover:opacity-80"
        >
          <div class="flex w-12 items-center justify-center p-1">
            <img src="/favicon.svg" alt="WHPH Logo" class="h-full w-full" />
          </div>
          <span class="text-lg font-semibold text-white">WHPH</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden items-center space-x-6 md:flex">
        <a href="#features" class="font-medium text-gray-300 transition-colors hover:text-primary">
          {t('navigation.features')}
        </a>
        <a href="#download" class="font-medium text-gray-300 transition-colors hover:text-primary">
          {t('navigation.download')}
        </a>
        <a href="#faq" class="font-medium text-gray-300 transition-colors hover:text-primary">
          {t('navigation.faq')}
        </a>
        <a
          href="https://github.com/ahmet-cetinkaya/whph"
          target="_blank"
          rel="noopener"
          class="font-medium text-gray-300 transition-colors hover:text-primary"
        >
          {t('navigation.github')}
        </a>
      </div>

      <!-- Desktop Actions -->
      <div class="hidden items-center space-x-3 md:flex">
        <!-- Language Switcher -->
        <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} />
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="rounded-lg p-2 text-gray-300 transition-colors hover:bg-dark-surface-1 md:hidden"
        aria-label={t('navigation.toggleMenu')}
      >
        <HamburgerIcon />
      </button>
    </nav>
  </Container>

  <!-- Mobile Menu Blur Overlay -->
  <div
    id="mobile-menu-overlay"
    class="invisible fixed inset-0 z-40 opacity-0 backdrop-blur-md transition-all duration-300 md:hidden"
  >
  </div>

  <!-- Mobile Menu Drawer -->
  <div
    id="mobile-menu"
    class="fixed right-0 top-0 z-50 hidden h-screen w-80 max-w-[80vw] translate-x-full transform flex-col border-l border-gray-700 bg-dark-surface-2/95 shadow-xl transition-transform duration-300 md:hidden"
  >
    <!-- Mobile Menu Header -->
    <div
      class="flex flex-shrink-0 items-center justify-between border-b border-gray-700 bg-dark-surface-1/90 p-6"
    >
      <div class="flex items-center space-x-2">
        <div class="flex h-8 w-8 items-center justify-center p-1">
          <img src="/favicon.svg" alt="WHPH Logo" class="h-full w-full" />
        </div>
        <span class="text-lg font-semibold text-white">WHPH</span>
      </div>
      <button
        id="mobile-menu-close"
        class="rounded-lg p-2 text-gray-300 transition-colors hover:bg-dark-surface-1"
        aria-label={t('common.close')}
      >
        <CloseIcon />
      </button>
    </div>

    <!-- Mobile Menu Content -->
    <div class="min-h-0 flex-1 space-y-6 overflow-y-auto bg-dark-surface-2/90 p-6">
      <!-- Navigation Links (matching desktop exactly) -->
      <nav class="space-y-4">
        <a
          href="#features"
          class="mobile-menu-link block text-lg font-medium text-white transition-colors hover:text-primary"
        >
          {t('navigation.features')}
        </a>
        <a
          href="#download"
          class="mobile-menu-link block text-lg font-medium text-white transition-colors hover:text-primary"
        >
          {t('navigation.download')}
        </a>
        <a
          href="#faq"
          class="mobile-menu-link block text-lg font-medium text-white transition-colors hover:text-primary"
        >
          {t('navigation.faq')}
        </a>
        <a
          href="https://github.com/ahmet-cetinkaya/whph"
          target="_blank"
          rel="noopener"
          class="mobile-menu-link block text-lg font-medium text-white transition-colors hover:text-primary"
        >
          {t('navigation.github')}
        </a>
      </nav>

      <!-- Language Switcher (matching desktop functionality) -->
      <div>
        <LanguageSwitcher currentLang={currentLang} currentPath={currentPath} isMobile={true} />
      </div>
    </div>
  </div>
</header>

<script>
  function initMobileMenu() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
    const closeButton = document.getElementById('mobile-menu-close');
    const menuLinks = document.querySelectorAll('.mobile-menu-link');

    function closeMobileMenu() {
      if (mobileMenu && mobileMenuOverlay) {
        // Hide overlay
        mobileMenuOverlay.classList.add('opacity-0', 'invisible');
        // Slide drawer out
        mobileMenu.classList.add('translate-x-full');
        // After animation, hide completely
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
          mobileMenu.classList.remove('flex');
        }, 300);
        // Restore body scroll
        document.body.style.overflow = '';
      }
    }

    function openMobileMenu() {
      if (mobileMenu && mobileMenuOverlay) {
        // Show overlay
        mobileMenuOverlay.classList.remove('opacity-0', 'invisible');
        // Show and slide drawer in
        mobileMenu.classList.remove('hidden');
        mobileMenu.classList.add('flex');
        mobileMenu.classList.remove('translate-x-full');
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      }
    }

    menuButton?.addEventListener('click', openMobileMenu);
    closeButton?.addEventListener('click', closeMobileMenu);

    // Close when clicking on overlay
    mobileMenuOverlay?.addEventListener('click', closeMobileMenu);

    // Close when clicking menu links
    menuLinks.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });

    // Close on escape key
    document.addEventListener('keydown', e => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initMobileMenu();
    });
  } else {
    initMobileMenu();
  }
</script>
