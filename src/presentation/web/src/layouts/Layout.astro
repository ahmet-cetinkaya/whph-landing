---
import Header from '../components/Header.astro';
import PerformanceMonitor from '../components/PerformanceMonitor.astro';
import AccessibilityEnhancements from '../components/AccessibilityEnhancements.astro';
import Analytics from '../components/Analytics.astro';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
}

const { 
  title, 
  description = "Transform your productivity with intelligent task management, habit tracking, and time optimization—all in one comprehensive, privacy-focused application.",
  keywords = "productivity app, task management, habit tracker, time tracking, open source productivity, cross platform, privacy focused",
  ogImage = "/og-image.png"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(ogImage, Astro.url)} />
    <meta property="og:site_name" content="WHPH - Work Hard Play Hard" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(ogImage, Astro.url)} />
    
    <!-- Structured Data for Software Application -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "WHPH - Work Hard Play Hard",
        "description": "Comprehensive productivity application for task management, habit tracking, and time optimization",
        "url": "https://whph.ahmetcetinkaya.me",
        "applicationCategory": "ProductivityApplication",
        "operatingSystem": ["Android", "Windows", "Linux"],
        "offers": {
          "@type": "Offer",
          "price": "0",
          "priceCurrency": "USD"
        },
        "author": {
          "@type": "Person",
          "name": "Ahmet Çetinkaya"
        },
        "softwareVersion": "1.0",
        "downloadUrl": "https://github.com/ahmet-cetinkaya/whph/releases",
        "screenshot": "https://whph.ahmetcetinkaya.me/screenshots/hero.png",
        "featureList": [
          "Smart Task Management",
          "Habit Development Tracking",
          "Time Analytics and Insights",
          "Cross-Platform Synchronization",
          "Privacy-First Design"
        ]
      }
    </script>
    
    <!-- Preload critical resources -->
    <link rel="dns-prefetch" href="//github.com">
    <link rel="preconnect" href="https://github.com" crossorigin>
    
    <!-- Preload critical assets -->
    <link rel="modulepreload" href="/_astro/client.yr7uPUmK.js">
    <link rel="preload" href="/_astro/index.BjPiVCJJ.css" as="style">
    
    <!-- Resource hints for better performance -->
    <meta name="format-detection" content="telephone=no">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-title" content="WHPH">
    <meta name="application-name" content="WHPH">
    <meta name="theme-color" content="#F4D03E">
    <meta name="msapplication-TileColor" content="#F4D03E">
    
    <!-- Theme Detection Script (runs before page load) -->
    <script is:inline>
      // Detect system theme preference and apply immediately
      if (typeof Storage !== 'undefined') {
        const theme = localStorage.getItem('theme') || 
                     (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        document.documentElement.classList.toggle('dark', theme === 'dark');
      }
    </script>
  </head>
  <body class="antialiased bg-white dark:bg-black text-gray-900 dark:text-white font-sans leading-relaxed transition-colors duration-200">
    <AccessibilityEnhancements />
    <Header />
    <main id="main-content">
      <slot />
    </main>
    
    <!-- Performance Monitoring (Development) -->
    <PerformanceMonitor />
    
    <!-- Privacy-Focused Analytics -->
    <Analytics />
    
    <!-- Theme Toggle Script -->
    <script>
      // Theme toggle functionality
      function initTheme() {
        const themeToggle = document.getElementById('theme-toggle');
        if (!themeToggle) return;
        
        themeToggle.addEventListener('click', () => {
          const isDark = document.documentElement.classList.contains('dark');
          const newTheme = isDark ? 'light' : 'dark';
          
          document.documentElement.classList.toggle('dark', newTheme === 'dark');
          localStorage.setItem('theme', newTheme);
        });
      }
      
      // Initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTheme);
      } else {
        initTheme();
      }
    </script>
  </body>
</html>

